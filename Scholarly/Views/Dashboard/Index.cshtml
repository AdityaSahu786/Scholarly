@* ####################### trying styles ###################### *@
@model Scholarly.Models.StudentDashboardViewModel

@{
    ViewData["Title"] = "Student Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="text-center dynamic-welcome mb-4">Student Dashboard</h2>

    <!-- Logout Button -->
    <div class="text-right mb-4">
        <form asp-action="Logout" method="post">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger">
                <i class="fa fa-sign-out-alt"></i> Logout
            </button>
        </form>
    </div>

    <!-- Basic Information Section -->
    <section class="card mb-4 shadow-sm border border-1 border-dark">
        <header class="card-header bg-primary text-white">
            <h5 class="mb-0">Basic Information</h5>
        </header>
        <div class="card-body">
            <p><strong>Username:</strong> @Model.Username</p>
            <p><strong>Email:</strong> @Model.Email</p>
        </div>
    </section>

    <!-- Student Profile Section -->
    <section class="card mb-4 shadow-sm border border-1 border-dark">
        <header class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Student Profile</h5>
            <button type="button" class="btn btn-warning animated-button m-2" id="editProfileBtn">
                <i class="fa fa-pencil-alt"></i> Edit Profile
            </button>
        </header>
        <div class="card-body">
            <h6>Current Profile Details</h6>
            <p><strong>Full Name:</strong> @Model.FullName</p>
            <p><strong>Current Semester:</strong> @Model.CurrentSemester</p>
            <p><strong>Year:</strong> @Model.Year</p>
            <p><strong>Registration No:</strong> @Model.RegistrationNo</p>
            <p><strong>Phone No:</strong> @Model.PhoneNo</p>
            <p><strong>Address:</strong> @Model.Address</p>

            <hr />

            <!-- Profile Update Form (Initially Hidden) -->
            <div id="updateProfileForm" class="d-none">
                <form asp-action="UpdateProfile" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="StudentId" />

                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control border border-1 border-dark", @placeholder = "Enter Full Name" })
                        @Html.LabelFor(model => model.FullName, new { @class = "form-label" })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(model => model.CurrentSemester, new { @class = "form-control border border-1 border-dark", @placeholder = "Enter Current Semester" })
                        @Html.LabelFor(model => model.CurrentSemester, new { @class = "form-label" })
                        @Html.ValidationMessageFor(model => model.CurrentSemester, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(model => model.RegistrationNo, new { @class = "form-control border border-1 border-dark", @placeholder = "Enter Registration No" })
                        @Html.LabelFor(model => model.RegistrationNo, new { @class = "form-label" })
                        @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(model => model.PhoneNo, new { @class = "form-control border border-1 border-dark", @placeholder = "Enter Phone No" })
                        @Html.LabelFor(model => model.PhoneNo, new { @class = "form-label" })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-floating mb-3">
                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control border border-1 border-dark", @placeholder = "Enter Address", rows = 3 })
                        @Html.LabelFor(model => model.Address, new { @class = "form-label" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-warning animated-button" style="color: white; background-color: #ff5733; border-color: #ff5733;">
                            <i class="fa fa-save"></i> Update Profile
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </section>

    <!-- Enrolled Courses Section -->
    <section class="card mb-4 shadow-sm border border-1 border-dark">
        <header class="card-header bg-success text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Enrolled Courses</h5>
            <form asp-action="ApplyForEnrollment" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="studentId" value="@Model.StudentId" />
                <button type="submit" class="btn btn-warning animated-button">
                    <i class="fa fa-plus"></i> Apply for Enrollment
                </button>
            </form>
        </header>
        <div class="card-body">
            @if (Model.Enrollments != null && Model.Enrollments.Any())
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Course Name</th>
                            <th>Grade</th>
                            <th>Attendance</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var enrollment in Model.Enrollments)
                        {
                            <tr>
                                <td>@enrollment.Courses?.Name</td>
                                <td>@enrollment.Grade</td>
                                <td>
                                    @if (enrollment.Attendance != null && enrollment.Attendance.Any())
                                    {
                                        <div class="attendance-calendar">
                                            @{
                                                var daysInMonth = DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month);
                                                for (int day = 1; day <= daysInMonth; day++)
                                                {
                                                    var date = new DateTime(DateTime.Now.Year, DateTime.Now.Month, day);
                                                    var attendance = enrollment.Attendance.FirstOrDefault(a => a.Date == date);
                                                    var isPresent = attendance != null && attendance.AttendanceData != 0;
                                                    var color = isPresent ? "green" : "red"; // Green for present, red for absent
                                                    <div class="attendance-day" style="background-color: @color;">@day</div>
                                                }
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p>No attendance data available.</p>
                                    }
                                </td>
                                <td>
                                    @if (enrollment.Attendance != null && enrollment.Attendance.Any())
                                    {
                                        var today = DateTime.Today;
                                        var currentMonth = new DateTime(today.Year, today.Month, 1);
                                        var attendance = enrollment.Attendance.FirstOrDefault(a => a.Date == currentMonth);
                                        if (attendance != null && (attendance.AttendanceData & (1 << (today.Day - 1))) == 0)
                                        {
                                            <form asp-action="SubmitAttendance" method="post">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="enrollmentId" value="@enrollment.Id" />
                                                <input type="checkbox" name="isPresent" /> Present
                                                <button type="submit" class="btn btn-primary">Submit Attendance</button>
                                            </form>
                                        }
                                        else
                                        {
                                            <p>Attendance already submitted for today.</p>
                                        }
                                    }
                                    else
                                    {
                                        <form asp-action="SubmitAttendance" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="enrollmentId" value="@enrollment.Id" />
                                            <input type="checkbox" name="isPresent" /> Present
                                            <button type="submit" class="btn btn-primary">Submit Attendance</button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No enrollments found. Please click the "Apply for Enrollment" button above to enroll.</p>
            }
        </div>
    </section>

    <!-- Attendance Section -->
    <div class="card mb-4 shadow-sm border border-1 border-dark" id="attendanceSection" style="display: none;">
        <header class="card-header bg-info text-white">
            <h5 class="mb-0">Attendance Section</h5>
        </header>
        <div class="card-body">
            <p>Attendance data for the selected course and date will be displayed here.</p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Toggle the update profile form visibility
        document.getElementById("editProfileBtn").onclick = function () {
            var form = document.getElementById("updateProfileForm");
            var button = document.getElementById("editProfileBtn");

            form.classList.toggle("d-none");
            button.style.backgroundColor = button.style.backgroundColor === "rgb(255, 87, 51)" ? "#007bff" : "#ff5733";
        };

        // Show the attendance section when the submit attendance button is clicked
        document.querySelectorAll('form[asp-action="SubmitAttendance"]').forEach(form => {
            form.onsubmit = function () {
                document.getElementById("attendanceSection").style.display = "block";
            };
        });
    </script>
}

<style>
    .attendance-calendar {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 5px;
        margin-top: 10px;
    }

    .attendance-day {
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        border-radius: 50%;
        transition: transform 0.2s;
    }

        .attendance-day:hover {
            transform: scale(1.1);
        }

    .card-header {
        font-family: 'Montserrat', sans-serif;
        font-size: 1.25em;
        font-weight: bold;
    }

    .card-body {
        font-family: 'Lato', sans-serif;
        font-size: 1em;
    }

    .btn {
        font-family: 'Poppins', sans-serif;
        font-size: 1em;
        font-weight: bold;
    }
</style>

